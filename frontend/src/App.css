/* Mobile-friendly viewport height with fallback */
/* Use dvh (dynamic viewport height) which adjusts as the address bar shows/hides */
/* With lvh (large viewport height) as fallback for browsers that don't support dvh */
.mobile-viewport-height {
  height: 100vh; /* Base fallback for older browsers */
  height: 100lvh; /* Large viewport height fallback */
  height: 100dvh; /* Dynamic viewport height (preferred) */
}

/* Custom CSS variables for component-specific styling */
:root {
  --primary-color: #2c3e50;
  --secondary-color: #3498db;
  --accent-color: #e74c3c;
  --background-color: #ecf0f1;
  --card-background: #ffffff;
  --text-color: #2c3e50;
  --text-light: #7f8c8d;
  --border-color: #bdc3c7;
  --success-color: #27ae60;
  --shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.dark {
  --primary-color: #60a5fa;
  --secondary-color: #3b82f6;
  --accent-color: #ef4444;
  --background-color: #0f172a;
  --card-background: #1e293b;
  --text-color: #e2e8f0;
  --text-light: #94a3b8;
  --border-color: #334155;
  --success-color: #10b981;
  --shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
}

/* Bible Reader - custom component styles */
.bible-reader.empty {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 400px;
  color: var(--text-light);
}

.passage-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
  padding-bottom: 1rem;
  border-bottom: 2px solid var(--border-color);
}

.passage-header h2 {
  color: var(--primary-color);
  font-size: 1.8rem;
}

.translation-badge {
  background: var(--secondary-color);
  color: white;
  padding: 0.3rem 0.8rem;
  border-radius: 20px;
  font-size: 0.9rem;
  font-weight: 600;
}

.passage-content {
  position: relative;
  line-height: 1.8;
  user-select: text;
}

.verse {
  margin-bottom: 1rem;
}

.verse-number {
  display: inline-block;
  min-width: 30px;
  color: var(--secondary-color);
  font-weight: bold;
  font-size: 0.9rem;
  margin-right: 0.5rem;
}

.verse-text {
  font-size: 1.1rem;
  color: var(--text-color);
}

.verse-text::selection {
  background-color: #ffd700;
  color: var(--text-color);
}

.navigation-controls {
  position: sticky;
  bottom: 0;
  display: flex;
  justify-content: space-between;
  margin-top: 2rem;
  padding-top: 1.5rem;
  padding-bottom: 1rem;
  border-top: 2px solid var(--border-color);
  gap: 1rem;
  background: var(--card-background);
  z-index: 10;
}

/* Insights Panel - custom component styles */
.insights-header {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  margin-bottom: 1.5rem;
  padding-bottom: 1rem;
  border-bottom: 2px solid var(--border-color);
}

.insights-panel h2 {
  color: var(--primary-color);
  margin: 0;
  font-size: 1.3rem;
}

.insights-panel.empty {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 400px;
  text-align: center;
  color: var(--text-light);
}

.empty-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  padding: 2rem;
}

.empty-icon {
  color: var(--border-color);
}

.cached-badge {
  background: var(--success-color);
  color: white;
  padding: 0.5rem 1rem;
  border-radius: 4px;
  margin-bottom: 1rem;
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.9rem;
}

.selected-passage {
  background: #f8f9fa;
  padding: 1rem;
  border-radius: 4px;
  margin-bottom: 1.5rem;
  border-left: 4px solid var(--secondary-color);
}

.dark .selected-passage {
  background: #1e293b;
}

.selected-passage h3 {
  font-size: 1rem;
  margin-bottom: 0.5rem;
  color: var(--primary-color);
}

.passage-text {
  font-style: italic;
  color: var(--text-color);
  line-height: 1.6;
}

.insight-section {
  margin-bottom: 1.5rem;
}

.insight-section h3 {
  color: var(--primary-color);
  margin-bottom: 0.75rem;
  font-size: 1.1rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.insight-section p {
  line-height: 1.6;
  color: var(--text-color);
}

/* Loading states */
.loading,
.loading-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 3rem;
}

.spinner-icon {
  animation: spin 1s linear infinite;
  margin-bottom: 1rem;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.fade-in-loading {
  animation: fadeIn 300ms ease-in;
}

/* Chat message typography adjustments: tighten spacing for markdown rendered inside chat bubbles */
.chat-message .prose {
  /* Reduce letter spacing which felt too airy */
  letter-spacing: -0.01em;
  /* Remove default margins added by the prose utility to avoid extra vertical gap */
  margin: 0;
}
.chat-message .prose p {
  line-height: 1.5;
}

.chat-message .prose p,
.chat-message .prose li {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}

.chat-message .prose p:first-child {
  margin-top: 0;
}

.chat-message .prose h2 {
  font-size: 1rem;
}

.chat-message .prose ul,
.chat-message .prose ol {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
  padding-left: 0.25rem;
  margin-left: 0;
}

.chat-message .prose code {
  font-size: 0.95em;
}

/* Ensure chat bubbles can position pseudo elements */
.chat-message {
  position: relative;
  overflow: visible; /* ensure larger pointers are not clipped */
}

/* Shared styles for the triangular pointer pseudo-element */
.chat-message::after {
  content: "";
  position: absolute;
  bottom: 2px; /* place near the bottom of the bubble */
  width: 20px;
  height: 20px;
  background: inherit; /* match the bubble's background color */
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.14);
  z-index: 2;
  pointer-events: none;
}

/* Left-pointing triangle (assistant) -- only directional differences here */
.chat-message.bg-muted::after {
  left: -14px;
  transform: rotate(-12deg);
  clip-path: polygon(
    100% 0%,
    0% 50%,
    100% 100%
  ); /* sharp left-pointing triangle */
}

/* Right-pointing triangle (user) -- only directional differences here */
.chat-message.bg-primary::after {
  right: -14px;
  transform: rotate(12deg);
  clip-path: polygon(
    0% 0%,
    100% 50%,
    0% 100%
  ); /* sharp right-pointing triangle */
}
